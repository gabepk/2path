<ui:composition template="/WEB-INF/template/Layout-bs.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:fp="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">
	
	<ui:define name="title">
		2Path - Results
	</ui:define>
	
	<ui:define name="li-active-search">
	<li class="active">
		<a href="Search-bs.xhtml">
		<i class="fa fa-search"></i> Search</a>
	</li>
	</ui:define>
	
	<ui:define name="body">
		<f:metadata>
    		<fp:viewAction id="resultDeitaisViewAction" name="resultDetails" action="#{viewGraphBean.preRender}" />
    	</f:metadata>
		<h:form>
			<div class="row" style="margin-top:25px">
				<p:messages autoUpdate="true" closable="true" />
			</div>
			<div class="row">
				<div class="col-md-4">
					<div class="list-group">
						<div class="list-group-item active">List of Results</div>
						<div class="list-group-item">
							<!-- <h4 class="list-group-item-heading">
								List group item heading
							</h4>
							<p class="list-group-item-text">
								...
							</p>-->
							
							<p:selectOneListbox id="results" value="#{searchInResultsBean.resultSelected}"
								filter="true" style="height:150px;width:100%" required="true" >
								<f:selectItems value="#{searchInResultsBean.results}" var="r" itemValue="#{r}" />
							</p:selectOneListbox>
							
							
						</div>
					</div>
				</div>
				<div class="col-md-8">
					<style>
						.links line {
						  stroke: #999;
						  stroke-opacity: 0.6;
						}
						.nodes circle {
						  stroke: #fff;
						  stroke-width: 1.5px;
						}
					</style>
					<svg width="912" height="256"></svg>
					<script src="https://d3js.org/d3.v4.min.js"></script>
					<script>
						var svg = d3.select("svg"),
						    width = +svg.attr("width"),
						    height = +svg.attr("height");
						
						var color = d3.scaleOrdinal(d3.schemeCategory20);
						
						var simulation = d3.forceSimulation()
						    .force("link", d3.forceLink().id(function(d) { return d.id; }))
						    .force("charge", d3.forceManyBody())
						    .force("center", d3.forceCenter(width / 2, height / 2));
						
						d3.json("miserables.json", function(error, graph) {
						  if (error) throw error;
						
						  var link = svg.append("g")
						      .attr("class", "links")
						    .selectAll("line")
						    .data(graph.links)
						    .enter().append("line")
						      .attr("stroke-width", function(d) { return Math.sqrt(d.value); });
						
						  var node = svg.append("g")
						      .attr("class", "nodes")
						    .selectAll("circle")
						    .data(graph.nodes)
						    .enter().append("circle")
						      .attr("r", 5)
						      .attr("fill", function(d) { return color(d.group); })
						      .call(d3.drag()
						          .on("start", dragstarted)
						          .on("drag", dragged)
						          .on("end", dragended));
						
						  node.append("title")
						      .text(function(d) { return d.id; });
						
						  simulation
						      .nodes(graph.nodes)
						      .on("tick", ticked);
						
						  simulation.force("link")
						      .links(graph.links);
						
						  function ticked() {
						    link
						        .attr("x1", function(d) { return d.source.x; })
						        .attr("y1", function(d) { return d.source.y; })
						        .attr("x2", function(d) { return d.target.x; })
						        .attr("y2", function(d) { return d.target.y; });
						
						    node
						        .attr("cx", function(d) { return d.x; })
						        .attr("cy", function(d) { return d.y; });
						  }
						});
						
						function dragstarted(d) {
						  if (!d3.event.active) simulation.alphaTarget(0.3).restart();
						  d.fx = d.x;
						  d.fy = d.y;
						}
						
						function dragged(d) {
						  d.fx = d3.event.x;
						  d.fy = d3.event.y;
						}
						
						function dragended(d) {
						  if (!d3.event.active) simulation.alphaTarget(0);
						  d.fx = null;
						  d.fy = null;
						}
					</script>
				</div>
			</div>
			<div class="row" style="margin-top:100px;">
				<div class="col-md-2"></div>
				<div class="col-md-2">
					<a href="Home-bs.xhtml" class="btn btn-block btn-info">
						Home
					</a>
				</div>
				<div class="col-md-2">
					<a href="#" class="btn btn-block btn-warning">
						New Pathway
					</a>
				</div>
				<div class="col-md-2">
					<a href="#" class="btn btn-block btn-warning">
						Update
					</a>
				</div>
				<div class="col-md-2">
					<a href="Help-bs.xhtml" class="btn btn-block btn-info">
						Help
					</a>
				</div>
				<div class="col-md-2"></div>
			</div>
		</h:form>
	</ui:define>
</ui:composition>