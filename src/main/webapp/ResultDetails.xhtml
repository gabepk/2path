<ui:composition template="/WEB-INF/template/LayoutPadrao.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:fp="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">
	
	 <!-- Include the core AngularJS library -->
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular.min.js"></script>

	<!-- Resultado em forma de grafo. Usar api do neo4j aqui. -->

	<ui:define name="tituloBody">
		Result Details
	</ui:define>

	<ui:define name="body">
	
		<f:metadata>
    		<fp:viewAction id="resultDeitaisViewAction" name="resultDetails" action="#{viewGraphBean.preRender}" />
    	</f:metadata>
	
		<div style="position: relative;" ng-app="graphApp" >
			<div id="graphDiv" ng-controller="graphController" style="text-align: center; height: 500px">
				
				
				<!--  GRAPH BEGIN -->
				
				<!-- NAO DA PRA DEBUGAR ASSIM: -->
				<!-- <div id="graphDisplay"></div> -->
				
				
				<style>
					.links line {
					  stroke: #999;
					  stroke-opacity: 0.6;
					}
					.nodes circle {
					  stroke: #fff;
					  stroke-width: 1.5px;
					}
				</style>
				<h1>GRAFO:</h1>
				<svg width="1200" height="450"></svg>
				
				<script src="https://d3js.org/d3.v4.min.js"></script>
				<script>
					var svg = d3.select("svg"),
					    width = +svg.attr("width"),
					    height = +svg.attr("height");
					
					var color = d3.scaleOrdinal(d3.schemeCategory20);
					
					var simulation = d3.forceSimulation()
					    .force("link", d3.forceLink().id(function(d) { return d.id; }))
					    .force("charge", d3.forceManyBody())
					    .force("center", d3.forceCenter(width / 2, height / 2));
					
					d3.json("miserables.json", function(error, graph) {
					  if (error) throw error;
					
					  var link = svg.append("g")
					      .attr("class", "links")
					    .selectAll("line")
					    .data(graph.links)
					    .enter().append("line")
					      .attr("stroke-width", function(d) { return Math.sqrt(d.value); });
					
					  var node = svg.append("g")
					      .attr("class", "nodes")
					    .selectAll("circle")
					    .data(graph.nodes)
					    .enter().append("circle")
					      .attr("r", 5)
					      .attr("fill", function(d) { return color(d.group); })
					      .call(d3.drag()
					          .on("start", dragstarted)
					          .on("drag", dragged)
					          .on("end", dragended));
					
					  node.append("title")
					      .text(function(d) { return d.id; });
					
					  simulation
					      .nodes(graph.nodes)
					      .on("tick", ticked);
					
					  simulation.force("link")
					      .links(graph.links);
					
					  function ticked() {
					    link
					        .attr("x1", function(d) { return d.source.x; })
					        .attr("y1", function(d) { return d.source.y; })
					        .attr("x2", function(d) { return d.target.x; })
					        .attr("y2", function(d) { return d.target.y; });
					
					    node
					        .attr("cx", function(d) { return d.x; })
					        .attr("cy", function(d) { return d.y; });
					  }
					});
					
					function dragstarted(d) {
					  if (!d3.event.active) simulation.alphaTarget(0.3).restart();
					  d.fx = d.x;
					  d.fy = d.y;
					}
					
					function dragged(d) {
					  d.fx = d3.event.x;
					  d.fy = d3.event.y;
					}
					
					function dragended(d) {
					  if (!d3.event.active) simulation.alphaTarget(0);
					  d.fx = null;
					  d.fy = null;
					}
				</script>
				
				<!--  GRAPH END -->
				
			</div>
		</div>
		<!-- Modules -->
	    <!-- <script src="js/graphApp.js"></script> -->
	    <!-- Controllers -->
	    <!-- <script src="js/graphController.js"></script> -->

		<p:separator styleClass="separator-top" />

		<div class="compare-menu">
			<p:outputLabel styleClass="normal-font" style="vertical-align:10px;" value="Compare Organism X with:" for="comparison" />
			<span />
			
			<p:selectOneMenu id="comparison" value="#{searchInOrganismBean.organismSelected}"
				converter = "organismConverter" filter="true" style="width:220px" >
				<f:selectItems value="#{searchInOrganismBean.organisms}" var="org" 
				itemLabel="#{org.label}" itemValue="#{org}" />
			</p:selectOneMenu>
			<div>
				<p:commandButton styleClass="bottom-menu" value="Compare" update="@this" />
			</div>
		</div>

	</ui:define>

	<ui:define name="button-go-back">
		<p:commandButton value="Go Back" action="/Results" />
	</ui:define>
</ui:composition>